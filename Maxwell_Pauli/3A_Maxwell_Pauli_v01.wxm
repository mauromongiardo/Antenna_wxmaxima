/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: input   start ] */
kill(all)$

load(Pauli_v02);
load(Dirac_v01);
functions$

print("====================================================")$


hat(A):=block([],
        a11: conjugate(A[2,2]),
        a12: -conjugate(A[2,1]),
        a21: -conjugate(A[1,2]),
        a22: conjugate(A[1,1]),
        AGI:matrix([a11,a12],[a21,a22])
)$

tilde(A):=block([],
        a11: conjugate(A[1,1]),
        a12: conjugate(A[2,1]),
        a21: conjugate(A[1,2]),
        a22: conjugate(A[2,2]),
        AGI:matrix([a11,a12],[a21,a22])
)$

bar(A):=block([],
        a11: (A[2,2]),
        a12: (-A[1,2]),
        a21: (-A[2,1]),
        a22: (A[1,1]),
        AGI:matrix([a11,a12],[a21,a22])
)$

/* 3D case */
/*
depends([Ex,Ey,Ez],[x,y,z]);
depends([Hx,Hy,Hz],[x,y,z]);

depends([Cx,Cy,Cz],[x,y,z]);
depends([%psi],[x,y,z]);
*/

/*
print("_______________________________________")$
print("SPHERICAL COORDINATES ")$
print("_______________________________________")$
print("%sigma[r], %sigma[%theta], %sigma[phi]")$
print("Gradesph(M)")$
print("Nablasph(Ap)")$
*/


partial_m(Ap):=-j*k*%sigma[0].Ap+Nablarect(Ap);
partial_p(Ap):=j*k*%sigma[0].Ap+Nablarect(Ap);

partial_m_cyl(Ap):=-j*k*%sigma[0].Ap+Nablacyl(Ap);
partial_p_cyl(Ap):=j*k*%sigma[0].Ap+Nablacyl(Ap);

partial_m_sph(Ap):=-j*k*%sigma[0].Ap+Nablasph(Ap);
partial_p_sph(Ap):=j*k*%sigma[0].Ap+Nablasph(Ap);

/*depends([E,H,J],[r,%theta,phi]);*/

depends([E,H,J],[r,%theta]);

print("=====================================================")$
print("MAXWELL'S EQUATIONS")$
print("in spherical coordinates")$
print("=====================================================")$

print("E field matrix")$
EP:ratsimp(E[r]*%sigma[r]+E[%theta]*%sigma[%theta]+E[phi]*%sigma[phi]);

print("H field matrix")$
HP:ratsimp(H[r]*%sigma[r]+H[%theta]*%sigma[%theta]+H[phi]*%sigma[phi]);

print("F field matrix")$
FP :EP +%i*%eta*HP$

Maxwell: partial_p_sph(FP)$


JP : ratsimp(J[r]*%sigma[r]+J[phi]*%sigma[phi]+J[%theta]*%sigma[%theta])$
sources:%eta*(%rho*v*%sigma[0]-JP);

print("Maxwell's equations with sources")$
MSP :Maxwell-sources$
Gradesph(MSP)$


print("=====================================================")$
print("Potentials")$
print("=====================================================")$

depends([A,%Phi],[r,%theta,phi]);

/* 
to recover the field of a dipole
A[r]:%e^(-j*k*r)/r*cos(%theta);
A[%theta]:-%e^(-j*k*r)/r*sin(%theta);
A[phi]:0;
*/

AP:ratsimp(A[r]*%sigma[r]+A[phi]*%sigma[phi]+A[%theta]*%sigma[%theta]);
NAP : Nablasph(AP)$
divA: ratsimp(mat_trace(NAP)/2)$
%Phi : j* v/k*divA$
print("Potential satisfying Lorenz Gauge")$
Apot: v*AP-%Phi*%sigma[0];


Field : partial_m_sph(Apot)$

Gradesph(Field)$

print("=====================================================")$
print("Potentials sources")$
print("=====================================================")$
kill(%Phi)$
depends([%Phi],[r,%theta,phi]);

Apot: v*AP-%Phi*%sigma[0];
ppA : ratsimp(partial_p_sph(partial_m_sph(Apot)))$
ppA :subst(-1,j^2,ppA)$
Aeq : ppA-sources$

Gradesph(Aeq)$

print("end")$
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
